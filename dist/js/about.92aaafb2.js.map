{"version":3,"sources":["webpack:///./src/views/Table.vue","webpack:///./src/views/Table.vue?3f0e","webpack:///./src/views/Table.vue?96e9","webpack:///./src/views/About.vue","webpack:///./src/views/Table.vue?0437","webpack:///./src/views/About.vue?28b7","webpack:///./src/views/About.vue?7424"],"names":["class","onFilterChanged","usersToDisplay","currentPage","pageSize","totalCount","totalPageCount","pageClick","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Table","_super","_this","apply","allUsers","filteredUsers","created","initData","dist","name","faker","firstName","data","past","age","Math","floor","random","avatar","push","slice","get","from","to","enumerable","configurable","ceil","page","Number","formatDate","date","moment","format","console","log","Options","components","HelloWorld","Filter","Pagination","Grid","Vue","render"],"mappings":"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","file":"js/about.92aaafb2.js","sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <h1>Table</h1>\r\n    <Filter @change=\"onFilterChanged\" />\r\n\r\n    <Grid :usersToDisplay=\"usersToDisplay\" />\r\n\r\n    <Pagination\r\n      :currentPage=\"currentPage\"\r\n      :pageSize=\"pageSize\"\r\n      :totalCount=\"totalPageCount\"\r\n      @pageClick=\"pageClick\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n// класс у которого будет метод - получить список пользователей . В качестве параметров он принимает класс FilterRequest {search?, date?, skip?, take?}\r\n// т.е. getUsers(FilterRequest) => вернет {Count: (всего элементов), Items: - непосредственно элементы}. Items: []UserServerModel - {name, birhtdate, avatar, age}\r\n// надо сделать компонент фильтр - ввод поисковой строки, выбор даты.\r\n// компонент / табличка - который отображает данные.\r\n// компонент - постраничка - который формирует элементы переключения страниц\r\n// отображать ты будешь список UserViewModel[]\r\n// пример таблицы https://mdbootstrap.com/docs/b4/jquery/tables/pagination/\r\n\r\n\r\n//добавить поиск до и после\r\n//дообавить расширение списка как в примере\r\n// слот в таблице все импуты, в фильтре кнопки поиска и отчистки фильтра\r\nimport { Options, Prop, Vue, Watch } from \"vue-property-decorator\";\r\nimport HelloWorld from \"@/components/HelloWorld.vue\"; // @ is an alias to /src\r\nimport Filter from \"@/components/Filter.vue\";\r\nimport Pagination from \"@/components/Pagination.vue\";\r\nimport Grid from \"@/components/Grid.vue\";\r\n\r\nimport * as faker from \"faker\";\r\nimport * as moment from \"moment\";\r\nimport { date } from \"faker\";\r\n\r\ninterface IUser {\r\n  name: string;\r\n  data: Date;\r\n  age: number;\r\n  avatar: string;\r\n}\r\ninterface ISearch {\r\n  search: string;\r\n  fromDate: String;\r\n  toDate: String;\r\n  fromAge: string;\r\n  toAge: string;\r\n}\r\n@Options({\r\n  name: \"table\",\r\n  components: {\r\n    HelloWorld,\r\n    Filter,\r\n    Pagination,\r\n    Grid,\r\n  },\r\n})\r\nexport default class Table extends Vue {\r\n  created() {\r\n    this.initData();\r\n  }\r\n  allUsers: IUser[] = [];\r\n  filteredUsers: IUser[] = [];\r\n  currentPage = 1;\r\n  pageSize = 10;\r\n  initData() {\r\n    for (var i = 0; i < 30; i++) {\r\n      let dist = {\r\n        name: faker.name.firstName(),\r\n        data: faker.date.past(),\r\n        age: Math.floor(Math.random() * 101),\r\n        avatar: faker.image.avatar(),\r\n      };\r\n      this.allUsers.push(dist);\r\n    }\r\n    this.filteredUsers = this.allUsers.slice();\r\n  }\r\n\r\n  get usersToDisplay(): IUser[] {\r\n    let from = (this.currentPage - 1) * this.pageSize;\r\n    let to = from + this.pageSize;\r\n    return this.filteredUsers.slice(from, to);\r\n  }\r\n\r\n  get totalPageCount(): number {\r\n    return Math.ceil(this.filteredUsers.length / this.pageSize);\r\n  }\r\n  // получает номер страницы на которую нажали\r\n  pageClick(page: Number) {\r\n    this.currentPage = Number(page);\r\n  }\r\n  formatDate(date: Date) {\r\n    return moment(date).format(\"DD.MM.YYYY hh:mm\");\r\n  }\r\n  // ловля события\r\n  onFilterChanged(data: ISearch) {\r\n    console.log('onFilterChanged: ', data);\r\n    \r\n    //data: {search: string,  dateFrom?: Date, dateTo?: Date, ageFrom?: number, ageTo?: number,}\r\n    //searchpull:ISearch []\r\n  //  const s = searchpull.search.toLowerCase();\r\n  //   this.filteredUsers = this.allUsers.filter(\r\n  //     (x) =>\r\n  //       x.name.toLowerCase().includes(s) ||\r\n  //       x.age.toString().includes(s) ||\r\n  //       this.formatDate(x.data).includes(s)\r\n  //   );\r\n  //   if (this.currentPage > this.totalPageCount) {\r\n  //     this.currentPage = this.totalPageCount;\r\n  //   }\r\n  console.log();\r\n    // console.log('Словили событие: ', data);\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n.home {\r\n  .element {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  ._row,\r\n  .row {\r\n    display: flex;\r\n  }\r\n  .cell_name,\r\n  .cell_date,\r\n  .cell_age,\r\n  .cell_avatar {\r\n    width: 200px;\r\n    border: 1px #000 solid;\r\n  }\r\n  .pagination {\r\n    display: flex;\r\n  }\r\n  .page {\r\n    padding: 10px;\r\n    border: 1px solid #000;\r\n    margin: 1px;\r\n    cursor: pointer;\r\n    &.active {\r\n      background-color: purple;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","// класс у которого будет метод - получить список пользователей . В качестве параметров он принимает класс FilterRequest {search?, date?, skip?, take?}\r\n// т.е. getUsers(FilterRequest) => вернет {Count: (всего элементов), Items: - непосредственно элементы}. Items: []UserServerModel - {name, birhtdate, avatar, age}\r\n// надо сделать компонент фильтр - ввод поисковой строки, выбор даты.\r\n// компонент / табличка - который отображает данные.\r\n// компонент - постраничка - который формирует элементы переключения страниц\r\n// отображать ты будешь список UserViewModel[]\r\n// пример таблицы https://mdbootstrap.com/docs/b4/jquery/tables/pagination/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\n//добавить поиск до и после\r\n//дообавить расширение списка как в примере\r\n// слот в таблице все импуты, в фильтре кнопки поиска и отчистки фильтра\r\nimport { Options, Vue } from \"vue-property-decorator\";\r\nimport HelloWorld from \"@/components/HelloWorld.vue\"; // @ is an alias to /src\r\nimport Filter from \"@/components/Filter.vue\";\r\nimport Pagination from \"@/components/Pagination.vue\";\r\nimport Grid from \"@/components/Grid.vue\";\r\nimport * as faker from \"faker\";\r\nimport * as moment from \"moment\";\r\nvar Table = /** @class */ (function (_super) {\r\n    __extends(Table, _super);\r\n    function Table() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.allUsers = [];\r\n        _this.filteredUsers = [];\r\n        _this.currentPage = 1;\r\n        _this.pageSize = 10;\r\n        return _this;\r\n    }\r\n    Table.prototype.created = function () {\r\n        this.initData();\r\n    };\r\n    Table.prototype.initData = function () {\r\n        for (var i = 0; i < 30; i++) {\r\n            var dist = {\r\n                name: faker.name.firstName(),\r\n                data: faker.date.past(),\r\n                age: Math.floor(Math.random() * 101),\r\n                avatar: faker.image.avatar(),\r\n            };\r\n            this.allUsers.push(dist);\r\n        }\r\n        this.filteredUsers = this.allUsers.slice();\r\n    };\r\n    Object.defineProperty(Table.prototype, \"usersToDisplay\", {\r\n        get: function () {\r\n            var from = (this.currentPage - 1) * this.pageSize;\r\n            var to = from + this.pageSize;\r\n            return this.filteredUsers.slice(from, to);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Table.prototype, \"totalPageCount\", {\r\n        get: function () {\r\n            return Math.ceil(this.filteredUsers.length / this.pageSize);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // получает номер страницы на которую нажали\r\n    Table.prototype.pageClick = function (page) {\r\n        this.currentPage = Number(page);\r\n    };\r\n    Table.prototype.formatDate = function (date) {\r\n        return moment(date).format(\"DD.MM.YYYY hh:mm\");\r\n    };\r\n    // ловля события\r\n    Table.prototype.onFilterChanged = function (data) {\r\n        console.log('onFilterChanged: ', data);\r\n        //data: {search: string,  dateFrom?: Date, dateTo?: Date, ageFrom?: number, ageTo?: number,}\r\n        //searchpull:ISearch []\r\n        //  const s = searchpull.search.toLowerCase();\r\n        //   this.filteredUsers = this.allUsers.filter(\r\n        //     (x) =>\r\n        //       x.name.toLowerCase().includes(s) ||\r\n        //       x.age.toString().includes(s) ||\r\n        //       this.formatDate(x.data).includes(s)\r\n        //   );\r\n        //   if (this.currentPage > this.totalPageCount) {\r\n        //     this.currentPage = this.totalPageCount;\r\n        //   }\r\n        console.log();\r\n        // console.log('Словили событие: ', data);\r\n    };\r\n    Table = __decorate([\r\n        Options({\r\n            name: \"table\",\r\n            components: {\r\n                HelloWorld: HelloWorld,\r\n                Filter: Filter,\r\n                Pagination: Pagination,\r\n                Grid: Grid,\r\n            },\r\n        })\r\n    ], Table);\r\n    return Table;\r\n}(Vue));\r\nexport default Table;\r\n","import { render } from \"./Table.vue?vue&type=template&id=718047e9\"\nimport script from \"./Table.vue?vue&type=script&lang=ts\"\nexport * from \"./Table.vue?vue&type=script&lang=ts\"\n\nimport \"./Table.vue?vue&type=style&index=0&id=718047e9&lang=less\"\nscript.render = render\n\nexport default script","<template>\r\n  <div class=\"about\">\r\n    <h1>This is an about page</h1>\r\n     <h1>{{ name }}</h1>\r\n    <div class='element'>\r\n      <input v-model='name'/>\r\n      <!--v-model  для обновления данных в элементах ввода-->\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n // let firstName = faker.name.firstName();\r\n      // console.log(firstName);\r\n      // let birthday = faker.date.past();\r\n      // console.log(birthday);\r\n      // let age = Math.floor(Math.random() * 101);\r\n      // console.log(age);\r\n      // let avatar = faker.image.avatar();\r\n      // console.log(avatar);\r\n       // name = 'Иванов Иван Иванович';\r\n  // @Watch('name')\r\n  // onNameChanged() {}\r\n</script>\r\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Table.vue?vue&type=style&index=0&id=718047e9&lang=less\"","export { default } from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./About.vue?vue&type=script&lang=js\"; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./About.vue?vue&type=script&lang=js\"","import { render } from \"./About.vue?vue&type=template&id=3b25b7dc\"\nimport script from \"./About.vue?vue&type=script&lang=js\"\nexport * from \"./About.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}